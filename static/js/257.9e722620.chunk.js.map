{"version":3,"file":"static/js/257.9e722620.chunk.js","mappings":"qQAEaA,EAAqBC,EAAAA,EAAAA,IAAH,iGAOlBC,EAAoBD,EAAAA,EAAAA,IAAH,2DAIjBE,EAAoBF,EAAAA,EAAAA,GAAH,kEAIjBG,EAAuBH,EAAAA,EAAAA,GAAH,kEAIpBI,EAAmBJ,EAAAA,EAAAA,EAAH,mE,SCuD7B,EAhEqB,WAAO,IAAD,IACzB,GAA0BK,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAEFE,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBP,GAASQ,MAAK,SAAAZ,GAC5BC,EAASD,GACTG,GAAW,EACZ,GACF,GAAE,CAACC,IACJ,IAAQS,EACNb,EADMa,MAAOC,EACbd,EADac,YAAaC,EAC1Bf,EAD0Be,WAAYC,EACtChB,EADsCgB,aAAcC,EACpDjB,EADoDiB,SAAUC,EAC9DlB,EAD8DkB,OAE1DC,EAAQ,yCAAqCL,GAC7CM,EAAO,IAAIC,KAAKL,GAAcM,iBACpC,OACE,0BACGpB,IACC,iCACE,SAAC,KAAD,CAAMqB,GAAIjB,EAAV,sBACA,UAACb,EAAD,YACE,SAACE,EAAD,CAAmB6B,IAAKL,EAAUM,IAAKZ,KACvC,4BACE,UAACjB,EAAD,WACGiB,EADH,IACWO,EADX,QAGA,UAACtB,EAAD,0BACe4B,KAAKC,MAAMZ,OAE1B,SAAClB,EAAD,wBACA,SAACC,EAAD,UAAmBmB,KACnB,SAACpB,EAAD,qBACCqB,EAAOU,KAAI,SAAAC,GACV,OACE,SAAC/B,EAAD,UACG+B,EAAMC,MADcD,EAAME,GAIhC,WAGL,SAAClC,EAAD,sCACA,2BACE,yBACE,SAAC,KAAD,CAAM0B,GAAG,OAAOf,MAAO,CAAEC,KAAMH,GAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMiB,GAAG,UAAUf,MAAO,CAAEC,KAAMH,GAAlC,2BAKJ,SAAC,KAAD,QAKT,C,4MCxEK0B,EAAa,mCAEnBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,sCACUD,EADV,YADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOC,EAAMC,GAAb,uFACHN,IAAAA,IAAA,gCACID,EADJ,kBACwBO,EADxB,iBAC4CD,IAFzC,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZzB,EAAe,mCAAG,WAAMoB,GAAN,uFACNE,IAAAA,IAAA,iBACXF,EADW,oBACGC,EADH,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfI,EAAY,mCAAG,WAAMT,GAAN,uFACHE,IAAAA,IAAA,iBACXF,EADW,4BACWC,EADX,oBADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKK,MAJK,2CAAH,sDAOZC,EAAe,mCAAG,WAAMX,GAAN,uFACNE,IAAAA,IAAA,iBACXF,EADW,4BACWC,EADX,2BADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKO,SAJQ,2CAAH,qD","sources":["pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieDetailsStyled = styled.div`\n  display: flex;\n  gap: 10px;\n  & > div {\n    max-width: 400px;\n  }\n`;\nexport const MovieDetailsImage = styled.img`\n  width: 400px;\n  height: 650px;\n`;\nexport const MovieDetailsTitle = styled.h1`\n  font-size: 36px;\n  font-weight: bold;\n`;\nexport const MovieDetailsHeadline = styled.h2`\n  font-size: 28px;\n  font-weight: bold;\n`;\nexport const MovieDetailsInfo = styled.p`\n  font-size: 20px;\n  font-style: italic;\n`;\n","import { useParams } from 'react-router-dom';\nimport { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'services/API';\nimport {\n  MovieDetailsStyled,\n  MovieDetailsTitle,\n  MovieDetailsHeadline,\n  MovieDetailsInfo,\n  MovieDetailsImage,\n} from 'pages/MovieDetails/MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(movie => {\n      setMovie(movie);\n      setLoading(true);\n    });\n  }, [movieId]);\n  const { title, poster_path, popularity, release_date, overview, genres } =\n    movie;\n  const imageURL = `https://image.tmdb.org/t/p/w500${poster_path}`;\n  const date = new Date(release_date).getUTCFullYear();\n  return (\n    <main>\n      {loading && (\n        <>\n          <Link to={backLinkHref}>Go back</Link>\n          <MovieDetailsStyled>\n            <MovieDetailsImage src={imageURL} alt={title} />\n            <div>\n              <MovieDetailsTitle>\n                {title}({date})\n              </MovieDetailsTitle>\n              <MovieDetailsInfo>\n                Popularity: {Math.round(popularity)}\n              </MovieDetailsInfo>\n              <MovieDetailsHeadline>Overview</MovieDetailsHeadline>\n              <MovieDetailsInfo>{overview}</MovieDetailsInfo>\n              <MovieDetailsHeadline>Genres</MovieDetailsHeadline>\n              {genres.map(genre => {\n                return (\n                  <MovieDetailsInfo key={genre.id}>\n                    {genre.name}\n                  </MovieDetailsInfo>\n                );\n              })}\n            </div>\n          </MovieDetailsStyled>\n          <MovieDetailsHeadline>Additional information</MovieDetailsHeadline>\n          <ul>\n            <li>\n              <Link to=\"cast\" state={{ from: backLinkHref }}>\n                Cast\n              </Link>\n            </li>\n            <li>\n              <Link to=\"reviews\" state={{ from: backLinkHref }}>\n                Reviews\n              </Link>\n            </li>\n          </ul>\n          <Outlet />\n        </>\n      )}\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst MY_API_KEY = '4a75e2e412d1d0b089e3b2f8fd934085';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${MY_API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async (page, searchQuery) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${MY_API_KEY}&query=${searchQuery}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${MY_API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${MY_API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${MY_API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["MovieDetailsStyled","styled","MovieDetailsImage","MovieDetailsTitle","MovieDetailsHeadline","MovieDetailsInfo","useState","movie","setMovie","loading","setLoading","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","getMovieDetails","then","title","poster_path","popularity","release_date","overview","genres","imageURL","date","Date","getUTCFullYear","to","src","alt","Math","round","map","genre","name","id","MY_API_KEY","axios","getTrendingMovies","response","data","searchMovies","page","searchQuery","getMovieCast","cast","getMovieReviews","results"],"sourceRoot":""}