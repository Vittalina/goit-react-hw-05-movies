{"version":3,"file":"static/js/247.c20300b3.chunk.js","mappings":"qNAKMA,EAAO,WACX,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,MAAK,SAAAR,GACzBC,EAAQD,GACRG,GAAW,EACZ,GACF,GAAE,CAACC,KAGF,8BACGF,IACC,iCACE,iCACA,wBACGF,EAAKS,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,GAAIC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UAC7BC,EAAQ,yCAAqCF,GACnD,OACE,2BACE,gBAAKG,IAAKD,EAAUE,IAAKL,KACzB,kCAAUA,MACV,uCAAeE,OAHRH,EAMZ,UAMZ,EAEDZ,EAAKmB,SAAW,CACdjB,KAAMkB,IAAAA,QACJA,IAAAA,MAAgB,CACdR,GAAIQ,IAAAA,OACJP,KAAMO,IAAAA,OAAAA,WACNL,UAAWK,IAAAA,OAAAA,WACXN,aAAcM,IAAAA,OAAAA,eAKpB,W,yNClDMC,EAAa,mCAEnBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAiB,mCAAG,oGACRD,IAAAA,IAAA,sCACUD,EADV,YADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,qDAOjBC,EAAY,mCAAG,WAAOC,EAAMC,GAAb,uFACHN,IAAAA,IAAA,gCACID,EADJ,kBACwBO,EADxB,iBAC4CD,IAFzC,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,wDAOZI,EAAe,mCAAG,WAAMjB,GAAN,uFACNU,IAAAA,IAAA,iBACXV,EADW,oBACGS,EADH,oBADM,cACvBG,EADuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfhB,EAAY,mCAAG,WAAMG,GAAN,uFACHU,IAAAA,IAAA,iBACXV,EADW,4BACWS,EADX,oBADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKvB,MAJK,2CAAH,sDAOZ4B,EAAe,mCAAG,WAAMlB,GAAN,uFACNU,IAAAA,IAAA,iBACXV,EADW,4BACWS,EADX,2BADM,cACvBG,EADuB,yBAItBA,EAASC,KAAKM,SAJQ,2CAAH,qD,mCCzB5B,IAAIC,EAAuBC,EAAQ,MAEnC,SAASC,IAAkB,CAC3B,SAASC,IAA2B,CACpCA,EAAuBC,kBAAoBF,EAE3CG,EAAOC,QAAU,WACf,SAASC,EAAKC,EAAOC,EAAUC,EAAeC,EAAUC,EAAcC,GACpE,GAAIA,IAAWb,EAAf,CAIA,IAAIc,EAAM,IAAIC,MACZ,mLAKF,MADAD,EAAIjC,KAAO,sBACLiC,CAPL,CAQF,CAED,SAASE,IACP,OAAOT,CACR,CAHDA,EAAKU,WAAaV,EAMlB,IAAIW,EAAiB,CACnBC,MAAOZ,EACPa,OAAQb,EACRc,KAAMd,EACNe,KAAMf,EACNgB,OAAQhB,EACRiB,OAAQjB,EACRkB,OAAQlB,EACRmB,OAAQnB,EAERoB,IAAKpB,EACLqB,QAASZ,EACTa,QAAStB,EACTuB,YAAavB,EACbwB,WAAYf,EACZgB,KAAMzB,EACN0B,SAAUjB,EACVkB,MAAOlB,EACPmB,UAAWnB,EACXoB,MAAOpB,EACPqB,MAAOrB,EAEPsB,eAAgBnC,EAChBC,kBAAmBF,GAKrB,OAFAgB,EAAe9B,UAAY8B,EAEpBA,CACR,C,uBC/CCb,EAAOC,QAAUL,EAAQ,IAARA,E,gCCNnBI,EAAOC,QAFoB,8C","sources":["components/Cast/Cast.jsx","services/API.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieCast } from 'services/API';\nimport PropTypes from 'prop-types';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId).then(cast => {\n      setCast(cast);\n      setLoading(true);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && (\n        <>\n          <p>Cast</p>\n          <ul>\n            {cast.map(({ id, name, profile_path, character }) => {\n              const imageURL = `https://image.tmdb.org/t/p/w500${profile_path}`;\n              return (\n                <li key={id}>\n                  <img src={imageURL} alt={name} />\n                  <p>Name: {name}</p>\n                  <p>Character: {character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        </>\n      )}\n    </>\n  );\n};\n\nCast.propType = {\n  cast: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst MY_API_KEY = '4a75e2e412d1d0b089e3b2f8fd934085';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${MY_API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async (page, searchQuery) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${MY_API_KEY}&query=${searchQuery}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${MY_API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${MY_API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${MY_API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Cast","useState","cast","setCast","loading","setLoading","movieId","useParams","useEffect","getMovieCast","then","map","id","name","profile_path","character","imageURL","src","alt","propType","PropTypes","MY_API_KEY","axios","getTrendingMovies","response","data","searchMovies","page","searchQuery","getMovieDetails","getMovieReviews","results","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}