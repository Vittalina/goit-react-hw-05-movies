{"version":3,"file":"static/js/49.0b1d902e.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.jsx","components/MovieSearchForm/MovieSearchForm.jsx","pages/Movies/Movies.jsx","services/API.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`${movie.id}`}>\n            <h3>{movie.title}</h3>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propType = {\n  movies: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      title: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MoviesList;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieSearchForm = ({ onSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onSubmitData = event => {\n    event.preventDefault();\n    onSubmit(query);\n\n    if (query.trim() === '') {\n      alert('Please enter your request');\n      return;\n    }\n  };\n\n  const onInputChange = event => {\n    setQuery(event.target.value);\n    console.log(event.target.value);\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmitData}>\n        <input\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          // onChange={e => setSearchParams({ query: e.target.value })}\n          onChange={onInputChange}\n          value={query}\n        />\n        <button type=\"submit\">\n          <span>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n  //   return (\n  //     <header className=\"Searchbar\">\n  //       <form className=\"SearchForm\" onSubmit={onSubmitData}>\n  //         <button type=\"submit\" className=\"SearchForm-button\">\n  //           <span className=\"SearchForm-button-label\">Search</span>\n  //         </button>\n  //         <input\n  //           className=\"SearchForm-input\"\n  //           type=\"text\"\n  //           autoComplete=\"off\"\n  //           autoFocus\n  //           placeholder=\"Search images and photos\"\n  //           onChange={onInputChange}\n  //           value={query}\n  //         />\n  //       </form>\n  //     </header>\n  //   );\n};\n\nMovieSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default MovieSearchForm;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchMovies } from 'services/API';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport MovieSearchForm from 'components/MovieSearchForm/MovieSearchForm';\n// import { Link, Outlet } from 'react-router-dom';\n\nconst Movies = () => {\n  const [page, setPage] = useState(1);\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n\n    searchMovies(page, searchQuery).then(movies => {\n      setMovies(movies.results);\n    });\n    // setQuery(query);\n  }, [page, searchQuery]);\n\n  const onSubmitData = search => {\n    setPage(1);\n    setSearchParams({ query: search });\n    // console.log(searchQuery);\n  };\n\n  return (\n    <div>\n      <MovieSearchForm onSubmit={onSubmitData} />\n      <MoviesList movies={movies} />\n      {/* <Outlet /> */}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst MY_API_KEY = '4a75e2e412d1d0b089e3b2f8fd934085';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${MY_API_KEY}&page=1`\n  );\n  return response.data;\n};\n\nexport const searchMovies = async (page, searchQuery) => {\n  const response = await axios.get(\n    `/search/movie?api_key=${MY_API_KEY}&query=${searchQuery}&page=${page}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${MY_API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=${MY_API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=${MY_API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MoviesList","movies","map","movie","to","id","title","propType","PropTypes","onSubmit","useState","query","setQuery","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","target","value","console","log","page","setPage","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","searchMovies","then","results","search","MY_API_KEY","axios","getTrendingMovies","response","data","getMovieDetails","getMovieCast","cast","getMovieReviews","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}